# apiVersion: v1
# kind: Namespace
# metadata:
#   name: ng-mongo
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mongodb-service
#   namespace: ng-mongo
#   labels:
#     name: mongo
# spec:
#   ports:
#   - port: 27017
#     targetPort: 27017
#   clusterIP: None
#   selector:
#     role: mongo
# ---
# kind: StorageClass
# apiVersion: storage.k8s.io/v1
# metadata:
#   name: local-storage
#   namespace: ng-mongo
# provisioner: kubernetes.io/no-provisioner
# volumeBindingMode: WaitForFirstConsumer
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: local-pv
#   namespace: ng-mongo
# spec:
#   capacity:
#     storage: 10Gi
#   # volumeMode field requires BlockVolume Alpha feature gate to be enabled.
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Delete
#   storageClassName: local-storage
#   local:
#     path: /tmp
#   nodeAffinity:
#     required:
#       nodeSelectorTerms:
#         - matchExpressions:
#             - key: kubernetes.io/hostname
#               operator: In
#               values:
#                 - minikube 
# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: local-claim
#   namespace: ng-mongo
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 2Gi
#   storageClassName: local-storage
# ---
# apiVersion: v1   
# kind: Service
# metadata:
#   name: mongo
#   namespace: ng-mongo
#   labels:
#     name: mongo
# spec:
#   ports:
#   - port: 27017
#     targetPort: 27017
#   clusterIP: None
#   selector:
#     role: mongo
# ---
# apiVersion: apps/v1    
# kind: StatefulSet
# metadata:
#   name: mongo
#   namespace: ng-mongo
# spec:
#   serviceName: "mongo"
#   replicas: 1
#   selector:
#     matchLabels:
#       role: mongo
#   template:
#     metadata:
#       labels:
#         role: mongo
#         environment: test
#     spec:
    
#       affinity:
#         nodeAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#             nodeSelectorTerms:
#             - matchExpressions:
#               - key: kubernetes.io/hostname
#                 operator: In
#                 values:
#                 - minikube                
#       terminationGracePeriodSeconds: 10
#       containers:
#       - name: mongo
#         image: mongo
#         command:
#           - mongod
#           - "--replSet"
#           - rs0
#           - "--smallfiles"
#           - "--noprealloc"
#         ports:
#           - containerPort: 27017
#         volumeMounts:
#           - name: mongo-persistent-storage
#             mountPath: /data/db
#       - name: mongo-sidecar
#         image: cvallance/mongo-k8s-sidecar
#         env:
#           - name: MONGO_SIDECAR_POD_LABELS
#             value: "role=mongo,environment=test"
#       # volumes:
#       #   - name: localvolume
#       #     persistentVolumeClaim:
#       #       claimName: local-claim

#   volumeClaimTemplates:
#   - metadata:
#       name: localvolume
#     spec:
#       accessModes: [ "ReadWriteOnce" ]
#       storageClassName: "local-storage"
#       resources:
#         requests:
#           storage: 2Gi          






# # apiVersion: apps/v1
# # kind: Deployment
# # metadata:
# #   creationTimestamp: null
# #   labels:
# #     app: mongo
# #   name: mongo
# # spec:
# #   replicas: 1
# #   selector:
# #     matchLabels:
# #       app: mongo
# #   strategy: {}
# #   template:
# #     metadata:
# #       creationTimestamp: null
# #       labels:
# #         app: mongo
# #     spec:
# #       containers:
# #       - image: mongo
# #         name: mongo
# #         args: ["--dbpath","/data/db"]
# #         livenessProbe:
# #           exec:
# #             command:
# #               - mongo
# #               - --disableImplicitSessions
# #               - --eval
# #               - "db.adminCommand('ping')"
# #           initialDelaySeconds: 30
# #           periodSeconds: 10
# #           timeoutSeconds: 5
# #           successThreshold: 1
# #           failureThreshold: 6
# #         readinessProbe:
# #           exec:
# #             command:
# #               - mongo
# #               - --disableImplicitSessions
# #               - --eval
# #               - "db.adminCommand('ping')"
# #           initialDelaySeconds: 30
# #           periodSeconds: 10
# #           timeoutSeconds: 5
# #           successThreshold: 1
# #           failureThreshold: 6
# #         env:
# #         - name: MONGO_INITDB_ROOT_USERNAME
# #           valueFrom:
# #             secretKeyRef:
# #               name: mongo-creds
# #               key: username
# #         - name: MONGO_INITDB_ROOT_PASSWORD
# #           valueFrom:
# #             secretKeyRef:
# #               name: mongo-creds
# #               key: password
# #         volumeMounts:
# #         - name: "mongo-data-dir"
# #           mountPath: "/data/db"
# #       volumes:
# #       - name: "mongo-data-dir"
# #         persistentVolumeClaim:
# #           claimName: "pvc"


apiVersion: v1
kind: Namespace
metadata:
  name: mongodb
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: manual
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
  namespace: mongodb
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/data/mongodb"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: mongodb
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb
  namespace: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-9.0.0
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: mongodb
---
# Source: mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mongodb
  namespace: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-9.0.0
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
type: Opaque
data:
  mongodb-root-password:  "cm9vdA=="
  mongodb-root-user:  "cm9vdA=="
---
# Source: mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-9.0.0
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/component: mongodb
---
# Source: mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-9.0.0
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-9.0.0
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: mongodb
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/minideb:buster
          imagePullPolicy: "Always"
          command:
            - /bin/bash
            - -ec
          args:
            - |
              mkdir -p /bitnami/mongodb
              chown -R "1001:1001" "/bitnami/mongodb"
          securityContext:
            runAsUser: 0
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
      containers:
        - name: mongodb
          image: bitnami/mongodb #docker.io/bitnami/mongodb:4.2.8-debian-10-r39
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"

            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: mongodb-root-password
            
            # - name: MONGODB_DATABASE
            #   value: "ng"
            # - name: ALLOW_EMPTY_PASSWORD
            #   value: "no"
            # - name: MONGODB_SYSTEM_LOG_VERBOSITY
            #   value: "0"
            # - name: MONGODB_DISABLE_SYSTEM_LOG
            #   value: "no"
            # - name: MONGODB_ENABLE_IPV6
            #   value: "no"
            # - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            #   value: "yes"

          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - pgrep
                - mongod
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: mongodb-pvc